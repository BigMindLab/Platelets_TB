import os
import requests

# Define the base URL for downloading gene set .grp files
base_url = "https://www.gsea-msigdb.org/gsea/msigdb/human/download_geneset.jsp?geneSetName={}&fileType=grp"

# List of gene sets you want to download
gene_sets = [
"DESCARTES_FETAL_LUNG_MEGAKARYOCYTES",
"GNATENKO_PLATELET_SIGNATURE",
"GOBP_INTERLEUKIN_1_MEDIATED_SIGNALING_PATHWAY",
"GOBP_MEGAKARYOCYTE_DEVELOPMENT",
"GOBP_MEGAKARYOCYTE_DIFFERENTIATION",
"GOBP_NEGATIVE_REGULATION_OF_MEGAKARYOCYTE_DIFFERENTIATION",
"GOBP_PLATELET_ACTIVATION",
"GOBP_PLATELET_AGGREGATION",
"GOBP_PLATELET_DENSE_GRANULE_ORGANIZATION",
"GOBP_PLATELET_DERIVED_GROWTH_FACTOR_RECEPTOR_SIGNALING_PATHWAY",
"GOBP_PLATELET_MORPHOGENESIS",
"GOBP_POSITIVE_REGULATION_OF_CYTOKINE_PRODUCTION",
"GOBP_POSITIVE_REGULATION_OF_TUMOR_NECROSIS_FACTOR_SUPERFAMILY_CYTOKINE_PRODUCTION",
"GOBP_REGULATION_OF_PLATELET_ACTIVATION",
"GOBP_REGULATION_OF_PLATELET_AGGREGATION",
"GOBP_REGULATION_OF_PLATELET_DERIVED_GROWTH_FACTOR_RECEPTOR_SIGNALING_PATHWAY",
"GOBP_RESPONSE_TO_PLATELET_DERIVED_GROWTH_FACTOR",
"GOBP_SECRETORY_GRANULE_ORGANIZATION",
"GOBP_TUMOR_NECROSIS_FACTOR_SUPERFAMILY_CYTOKINE_PRODUCTION",
"GOCC_PLATELET_ALPHA_GRANULE",
"GOCC_PLATELET_ALPHA_GRANULE_LUMEN",
"GOCC_PLATELET_ALPHA_GRANULE_MEMBRANE",
"GOCC_PLATELET_DENSE_GRANULE",
"HE_LIM_SUN_FETAL_LUNG_C2_PLATELET_CELL",
"HP_ABNORMAL_MEGAKARYOCYTE_MORPHOLOGY",
"HP_ABNORMAL_PLATELET_FUNCTION",
"HP_ABNORMAL_PLATELET_VOLUME",
"HP_IMPAIRED_PLATELET_AGGREGATION",
"HP_INCREASED_MEAN_PLATELET_VOLUME",
"PLASARI_TGFB1_TARGETS_10HR_UP",
"RAGHAVACHARI_PLATELET_SPECIFIC_GENES",
"REACTOME_FACTORS_INVOLVED_IN_MEGAKARYOCYTE_DEVELOPMENT_AND_PLATELET_PRODUCTION",
"REACTOME_PLATELET_ACTIVATION_SIGNALING_AND_AGGREGATION",
"REACTOME_PLATELET_ADHESION_TO_EXPOSED_COLLAGEN",
"REACTOME_PLATELET_AGGREGATION_PLUG_FORMATION",
"REACTOME_PLATELET_CALCIUM_HOMEOSTASIS",
"REACTOME_PLATELET_HOMEOSTASIS",
"REACTOME_PLATELET_SENSITIZATION_BY_LDL",
"REACTOME_RESPONSE_TO_ELEVATED_PLATELET_CYTOSOLIC_CA2",
"REACTOME_RUNX1_REGULATES_GENES_INVOLVED_IN_MEGAKARYOCYTE_DIFFERENTIATION_AND_PLATELET_FUNCTION",
"SANA_TNF_SIGNALING_UP",
"TENEDINI_MEGAKARYOCYTE_MARKERS",
"VERRECCHIA_EARLY_RESPONSE_TO_TGFB1",
"VERRECCHIA_RESPONSE_TO_TGFB1_C1",
"ZHENG_CORD_BLOOD_C1_PUTATIVE_MEGAKARYOCYTE_PROGENITOR",
"ZHENG_CORD_BLOOD_C3_MEGAKARYOCYTE_ERYTHROID_PROGENITOR"
]

# Define the output directory
output_directory = "GRPs"

# Function to download and save a gene set .grp file
def download_gene_set(gene_set_name):
    url = base_url.format(gene_set_name)
    response = requests.get(url)
    if response.status_code == 200:
        file_path = os.path.join(output_directory, f"{gene_set_name}.grp")
        with open(file_path, 'wb') as file:
            file.write(response.content)
        print(f"Downloaded: {gene_set_name}")
    else:
        print(f"Failed to download: {gene_set_name} - Status code: {response.status_code}")

# Iterate over the list of gene sets and download each
for gene_set in gene_sets:
    download_gene_set(gene_set)

print("All gene sets have been downloaded.")
